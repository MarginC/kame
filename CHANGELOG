			CHANGELOG for KAME kit
$KAME: CHANGELOG,v 1.2160 2002/05/22 12:43:19 jinmei Exp $

<200205>
2002-05-22  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6: supported renewal of delegated prefixes.

Wed May 22 19:23:40 JST 2002  itojun@iijlab.net
	* kame/revlookupd: a daemon to translate DNS reverse lookup (PTR query)
	  into ICMPv6 node information query.  internet draft for this
	  will be issued shortly.

Tue May 21 21:19:30 PDT 2002  itojun@iijlab.net
	* openbsd: upgrade to 3.1.  NOTE: sctp does not work yet.

Mon May 20 14:48:02 JST 2002  itojun@iijlab.net
	* sys/netinet/sctp_usrreq.c (and other sctp related code):
	  upgraded to latest shipment from randall and folks.

2002-05-17  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6c: when constructing a reply message,
	included prefixes given in the corresponding advertisement message.
	* kame/kame/dhcp6/dhcp6s.c (server6_react_request): chose
	delegated prefixes based on the ones specified in the request
	message.

2002-05-17  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6.h: changed option type values that have
	not been officially assigned to the values documented in NTTC's
	service specification (as of today).
	Note: the current version has lost interoperability with former
	versions of KAME's dhcp6.  Please upgrade all clients and servers
	to the latest version.
	Note: we'll change the temporary values if different type values
	are officially assigned.

2002-05-17  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6: supported the preference option; servers can
	specify the preference value for a particular interface.  Clients
	can parse the preference option and take it into account for
	choosing the best server.

2002-05-16  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6: supported the "normal" sequence of
	client-server exchange; solicit, advertise(s), request, and then
	reply.  There are still some restrictions; unicasted requests are
	not supported.  Address allocation is not supported (nor will be.)
	When the client received multiple advertisements, it would just
	pick the server that had the highest preference (though preference
	option is not supported).

2002-05-09  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6: implemented a limited support of prefix
	delegation based on draft-troan-dhcpv6-opt-prefix-delegation-01.txt.
	A client sends a solicit with a rapid commit option and an option
	request option specifying a prefix delegation option.  A server
	responds to the solicit with a reply containing a prefix
	delegation option.  The client accepts the reply and configure an
	address on specified interfaces using the delegated prefix.

Thu May  9 18:41:28 JST 2002  itojun@iijlab.net
	* faithd: drop rsh/rlogin protocol support.

Tue May  7 18:37:13 JST 2002 sakane@kame.net
	* kame/racoon:
	fixed the behavior when
	- when the "unique" level policy was used, racoon in the responder side
	mis-configured the SAs.  <yvan.vanhullebus@netasq.com> reported and
	donated the patch.

2002-05-01  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6.h: declared sockaddr in all supported OSes
	(KAME PR 418).

2002-05-01  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6s.c: added an ability to respond to a
	solicit message with a rapid commit option.

2002-05-01  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6c.c (client6_send): ensured that the
	transaction-ID unchanged in retransmissions of a message according
	to Section 15.1 of dhcpv6-24.

<200204>
2002-04-30  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6: added an ability to send solicit messages with
	a rapid commit option.  A configuration file for dhcp6c was
	introduced to include the option.

2002-04-28  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/rtadvd/config.c (getconfig): if "addrs" was explicitly
	set to 0, enabled prefix autoconfiguration from the kernel.
	* kame/kame/rtadvd/rtadvd.c (main): set LOG_PERROR for openlog()
	when running in the foreground.
	Suggested by: Andrew White <awhite@arc.corp.mot.com>

Thu Apr 25 19:03:16 JST 2002 sakane@kame.net
	* kame/kame/racoon:
	fixed the key length of the null encryption for phase 2.
	racoon configured incorrect key length of the null encryption
	to the kernel.

2002-04-25  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6c.c (client6_recvreply):
	tightened DUID validation.
	* kame/kame/dhcp6/dhcp6s.c (server6_react_informreq):
	processed server and client DUID correctly.

2002-04-25  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/common.c (get_dhcp6_option): newly added as a
	shared routine to parse DHCPv6 options.

2002-04-24  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6c.c: corrected handling DUID for the client
	side according to dhcpv6-24.

Wed Apr 24 21:23:43 JST 2002  itojun@iijlab.net
	* faithd: correct connect(2) error handling.
	  From: Yukiyo Akisada <Yukiyo.Akisada@jp.yokogawa.com>
	  handle ECONNABORTED on accept(2).
	  From: morito@double-fault.net

2002-04-24  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/dhcp6/dhcp6.h: removed the "dh6_servaddr" member from
	the dhcp6{} structure, which had been removed from the
	specification.
	Note that interoperability with implementations in older KAME
	snaps had been lost by this change.

2002-04-24  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/ping6/ping6.c (main): changed the behaivor of the -m
	option as follows:
	  - when the option is specified once, the default behavior (send
	    packets at the minimum MTU) will be disabled for unicast
	    packets.
	  - when the option is more than once, it will be disabled for both
	    unicast and multicast packets.

2002-04-24  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/ndp/ndp.c (ifinfo): used the new member of the
	nd_ifinfo structure (see the next log entry) to see if the
	structure had been initialized.

2002-04-24  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_ifattach): obsoleted the usage of
	nd_ifinfo.linkmtu as the flag if the structure had been
	initialized.  Introduced a new member "initialized" for this
	specific purpose instead.
	Note: this change had broken binary compatibility to ndp(8) with
	the -i option.  Be sure to upgrade the application as well.

2002-04-22  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_setmtu): warned if configured (or
	detected) interface MTU is smaller than IPv6 minimum link MTU.

2002-04-22  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_ifattach.c (in6_ifattach): do not update
	in6_maxmtu in this function, in order to avoid using the MTU for a
	loopback MTU mistakenly.

2002-04-22  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_ifattach): do not synchronize an ND
	link MTU with the corresponding interface MTU, since this
	synchronization had a bad side effect when increasing the
	interface MTU.  Instead, when detecting the link's "real" MTU
	always consider those two values, and take the smaller one.
	(many code points, such as ip6_output(), that relied on the
	previous behavior were rewritten accordingly.)

2002-04-22  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_output): if there has been no NS
	for a neighbor after entering the INCOMPLETE state, send the
	first solicitation in nd6_output(), regardless of the timer value.
	This change will effectively improve the response time to the
	first NS.

2002-04-19  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/tcp_subr.c (tcp_respond): if
	IPV6_USE_MIN_MTU is specified for the option tell ip6_output to
	fragment the packet at the minimum MTU.

2002-04-19  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c: changed the policy about
	performing path MTU discovery; from now on multicast packets will
	be sent at the IPv6 minimum link MTU by default.  The semantics of
	IPV6_USE_MIN_MTU was changed accordingly, as will be described in
	the forthcoming rfc2292bis-07.

2002-04-19  SUZUKI, Shinsuke <suz@crl.hitachi.co.jp>
	* kame/kame/pim6sd/mld6.c
	does not log warning againt MLD message from ::.
	(sync with the change of kame/sys/netinet6/nd6_nbr.c at Rev 1.76)

2002-04-18  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/ip_output.c (ip_output): always freed
	the route entry stored in iproute (if it was used) regardless of
	the IPSEC kernel compilation option.
	This should be a better fix to FreeBSD-SA-02:21.tcpip, and should
	apply the kernel without the IPSEC option.

2002-04-13  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/{icmp6.c, nd6.c}:
	* netbsd/sys/netinet/if_arp.c (arp_rtdrain):
	* netbsd/sys/net/route.c:
	ported the cached route management routines from freebsd4.
	
2002-04-12  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/: use nd_ifinfo.linkmtu instead of
	ifp->if_mtu to handle link MTU issues wrt IPv6, whenever possible.
	Some OS dependent code for freebsd4 and bsdi4 was also modified in
	this manner.  Some for netbsd and openbsd was untouched.

2002-04-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/if_ether.c (arp_rtdrain):
	* kame/sys/netinet6/nd6.c (nd6_rtdrain):
	allowed the case where these functions received a NULL llinfo in
	order to avoid kernel panic in some situations.

2002-04-09  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/if_ether.c (arp_rtdrain): newly added as
	the hook for arp entries in the route cache queue.  Since arp does
	not have much state, the detection algorithm cannot be very smart;
	we only keep entries that have already been resolved.
	(see also: nd6_rtdrain below)

2002-04-09  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/icmp6.c (icmp6_input, icmp6_mtudisc_update):
	dropped icmp6 too big messages that reported an MTU less than the
	minimum MTU (i.e., 1280 bytes).  We believe such an error is only
	meaningful when we're acting as an SIIT(-like) client, which we do
	not support.

2002-04-08  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_proto.c: added a new sysctl knob
	"net.inet6.ip6.pmtu_expire" to configure the timer value (in
	seconds).
	(only available in freebsd4)

2002-04-08  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/icmp6.c (icmp6_mtudisc_timeout): enabled the
	function for FreeBSD to purge stale path MTU information.

2002-04-06  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/icmp6.c (icmp6_mtudisc_update): revised the
	case that the reported path MTU is less than the minimum MTU so
	that the minimum MTU would be used instead.  The former behavior,
	which disabled path MTU discovery, was probably just derived from
	the IPv4 code, and was meaningless for IPv6, because IPv6 does not
	have the "don't fragment" bit.  The previous behavior may even be
	exploited by some DoS attacks that intentionally send a too big
	message with an MTU less than the minimum.

2002-04-06  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_lookup): specified RTF_CACHE for a
	newly created route so that the route entry would be subject to
	cached route management.

2002-04-06  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_rtdrain): added as the callback
	function for each ND entry as a cached route, and decides
	whether the entry should really be removed based on the ND state.
	Entries which are reachable, delay or probe will not be removed.
	An ND cache to a default route will not be removed either.
	[FreeBSD4 only]

2002-04-06  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/net/route.c (rtredirect): set RTF_CACHE before
	calling rtrequest() so that routes created by redirect will be
	subject to management of cached routes.

2002-04-06  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/net/route.c: made cached route management more
	refined:
	- we now have 3 parameters to limit the cache; max, hiwat, and
	  lowat, all of which are configured automatically based on the
	  kernel memory limit.
	- rt_draincache() is called when the number of entries are being
	  beyond "hiwat", and the function tries to keep the entries
	  between "lowat" and "hiwat".
	- do not regard static routes as cache.
	- allow ifa_rtrequest() functions to add a timer entry so that
	  they can set a refined cleanup function.
	
2002-04-01  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/sys/net/route.c: added cached routes management (see
	below).

2002-04-01  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_lookup): checked if rt_llinfo is
	non-NULL to avoid returning an entry that has the LLINFO flag but
	is not a neighbor cache entry.
	* kame/sys/netinet6/nd6.c (nd6_is_addr_neighbor): removed the
	check for the pointer, because the check is now done in nd6_lookup().

<200203>
2002-03-29  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* {freebsd4, netbsd, openbsd}/sys/net/route.c: added an ability to
	manage the number of route entries that can be regarded as cache,
	in order to prevent local/remote DoS.  This is a preliminary and
	experimental support, which will need more work.  The same
	function for bsdi will be committed next week.

2002-03-29  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/net/route.c: ported routing entry timer from
	NetBSD (which was originally derived from BSD/OS).

2002-03-29  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/pim6sd/mld6v2.c (make_mld6v2_msg):
	* kame/kame/pim6sd/mld6.c (make_mld6_msg):
	* kame/kame/pim6dd/mld6.c (make_mld6_msg):
	always initialized destination address structures.
	Otherwise, the strucuture may contain garbages in sin6_scope_id,
	which might be rejected in recent versions of kernel.

2002-03-29  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6_rtr.c (defrouter_addifreq): set
	RTF_CLONING when installing a default route to an interface
	in order to perform ND correctly.  Previously this flag was
	implicitly set from the corresponding ifa_flags, which was dropped
	by a fix on 2002-02-26.  We could revert the former change, but I
	belive we should set the flag explicitly.

2002-03-27 Shin'ichi Fujisawa <fujisawa@kame.net>
	* kame/sys/netinet6/natpt_*.[ch]:
	- Fix some fragmentation related bugs.
	- Revise the following fragmentation related nonconformance
	  to RFC2765.
	  - Set DF flag when IPv6->IPv4 translation and there is no
	    IPv6 fragment header.  According to RFC2765 4.1.
	  - Add fragment header when IPv4 packet does not set DF flag
	    (Tested ICMPv4->ICMPv6 translation only).  According to
	    RFC2765 3.1.
	  - Translate IPv4 packet (ICMP Echo/Echoreply) which DF flag
	    is not set and larger than 1232 bytes (excluding IPv4
	    header) into two IPv6 packet.

2002-03-25  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_purge): zero-cleard the
	corresponding ND info.  Otherwise, parameters for removed
	interfaces could be reused for a newly-created interface.

2002-03-18  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ah_input.c (ah6_ctlinput):
	* kame/sys/netinet6/esp_input.c (esp6_ctlinput):
	corrected arguments to key_allocsa().  This fix is very important
	if you use IPsec, because key_allocsa() in recent snaps has a
	strong validation check which will cause kernel panic against
	bogus values.

2002-03-18  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_output): do not update the
	"dst" address, which is the next-hop address, for multicast
	destinations.  Otherwise, the layer 2 destination address would be
	bogus.

2002-03-17  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet6/udp6_usrreq.c (udp6_input): corrected
	address matching rules for incoming multicast packets, as
	suggested by Konstantin KABASSANOV <Konstantin.Kabassanov@lip6.fr>
	Without the change, multicast applications that binds the
	receiving socket with the multicast address would fail to accept
	incoming packets.

Fri Mar 15 19:45:40 JST 2002  itojun@iijlab.net
	* sys/netinet6/frag6.c: implement real lock around IPv6 reassembly
	code.
	(netbsd/openbsd only)

Fri Mar 15 18:28:20 JST 2002  itojun@iijlab.net
	* netbsd/sys/netinet/tcp_subr.c: have tcp6_drain().

2002-03-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_mroute.c:
	- made sure to attach packet addresses to every mbuf even after
	  m_copy().
	- added a supplement function m_copy_withpktaddrs() for this
	  purpose.
	Thanks to: "Konstantin KABASSANOV" <Konstantin.Kabassanov@lip6.fr>
	for finding the problem and testing patches.

2002-03-03  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/wru: added the -z option to specify the zone of the
	destination, particularly for the default destination, ff02::1.

2002-03-03  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/sys/netinet/tcp_subr.c (tcp6_ctlinput): loosened the
	assertion check for the "inner" source.  The check was so strong
	that it caused kernel panic when the function called from
	ip6_output() via pfctlinput2().
	bsdi4 KAME snap users are recommended to apply this fix.

Sun Mar  3 01:51:54 JST 2002 Keiichi SHIMA <keiichi@iij.ad.jp>
	* kame/sys/netinet6/{in6.c|mip6.c|mip_var.h|nd6_rtr.c}
	check the CoA when p2p address (like gif) is set.  this enables
	you to use MIP6 with molec.

2002-03-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_ctloutput, and related
	functions):
	- applied recent clarifications in rfc2292bis:
	  + ignored IPV6_DONTFRAG and IPV6_RECVPATHMTU for TCP sockets
	  + disallowed to set non-unspecified address by IPV6_PKTINFO for
	    TCP sockets
	- corrected the return value from getsocketopt for IPV6_DONTFRAG and
	  IPV6_USE_MIN_MTU

2002-03-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/icmp6.c (icmp6_redirect_output): included
	a target link layer address option in the redirect message for an
	on-link destination as well as for a better router.  This behavior
	should be correct according to the specification.

<200202>
Tue Feb 26 16:05:53 2002  SUMIKAWA Munechika  <sumikawa@ebina.hitachi.co.jp>
	* freebsd4/ports/ppp: awkhulhak ppp

2002-02-26  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet6/in6_pcb.c (in6_mapped_sockaddr,
	in6_mapped_peeraddr): do not convert the unspecified address (::)
	to the mapped address form.  Otherwise, get{peer, sock}name(2) for
	an AF_INET6 wildcard address would return ::ffff:0.0.0.0.

2002-02-26  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/tcp_syncache.c (syncache_socket): when
	making a PCB entry from a syn cache, do not forget to copy
	inc_isipv6.
	* freebsd4/sys/netinet/tcp_usrreq.c (tcp6_usr_connect): set
	inc_isipv6 when connecting to a non-mapped AF_INET6 address.

	All FreeBSD users are recommended to apply this fix.   Without
	these changes, we would fail to update a stale cached route.

2002-02-25 SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* sys/netinet6/in6_src.c (in6_selectsrc):
	fixed a bug that sendmsg() on raw socket sometimes fails by ENXIO,
	due to the inconsistency between embedded zone-id and the calculated
	outgoing interface-id.

Mon Feb 25 10:58:09 JST 2002  itojun@iijlab.net
	* sys/netinet/ip_input.c: enforce ipsec policy checking on forwarding
	  case (the portion was lost during transition to PR_LASTHDR).
	  From: Greg Troxel <gdt@ir.bbn.com>

2002-02-24  SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* kame/route6d/route6d.c:
	not remove global addresses on loopback interface from routing
	table by route aging.

2002-02-23  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/nd6.c (nd6_rtrequest): rejected the process of
	RESOLVE when the interface does not need neighbor caches.
	Otherwise, this function would mistakenly try to make a neighbor
	cache for an stf interface.
	Based on a report from Ross Finlayson <finlayson@live.com> at the
	freebsd-net ML.

2002-02-23  SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* kame/pim6sd/{pim6_proto.c, route.c}:
	pim6sd doesn't crash now when receiving (*,*,RP) entry.

Thu Feb 21 23:48:38 JST 2002 sakane@kame.net
	* kame/kame/racoon:
	to specify the identifier in "sainfo" directive is deprecated.
	the identifier should be always made from SPD.

2002-02-20  SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* freebsd4/sys/net/if.c (): 
	fixed a kernel crash that occurs when you enable IPv6 Multicast 
	on VLAN interface.

2002-02-19  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_setmoptions): fixed kernel
	panic in the case of IPV6_LEAVE_GROUP without an interface.
	The kernel would choose the group based on the address only with
	fix.
	Note, however, that ambiguity on the scope zone of the address
	would not be allowed by default.  This particularly means that you
	should always specify the interface for interface or link local
	groups.
	Based on: a report from Tomomi Suzuki <stomomi@ebina.hitachi.co.jp>

2002-02-19  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/tcp6_subr.c (tcp6_respond): called
	ip6_getpktaddrs() correctly.  NULL pointers would be referred to
	without this fix.
	Based on: a report from Tomomi Suzuki <stomomi@ebina.hitachi.co.jp>

2002-02-19  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_init2): called nd6_ifattach()
	for the loopback interface, in order to make sure to initialize
	the nd_ifinfo structure for the interface.

2002/02/19 16:05:42 JST	kjc@csl.sony.co.jp
	* reduce differences from netbsd-current and openbsd-3.0:
	 - use ALTQ_DECL() for altq only variables.
	 - make IFQ_ENQUEUE() take 4 args even for the non-altq case
	 - the return type of altq_etherclassify() is changed from
	   int to void.
	   the function prototype is moved to if_altq.h.
	* add more altq supported drivers and link types.
	  most of the remaining drivers are supported by now.

2002-02-18  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6.h: stopped defining the route_in6{}
	structure for bsdi4 regardless of local configuration options.
	We'll never need this because BSD/OS has merged the "new" route{}
	structure, which can store all socket addresses.
	* kame/sys/netinet6/{mld6.c, route6.h}: always included route.h
	based on the change above.

2002-02-18 Shin'ichi Fujisawa	<fujisawa@kame.net>
	* kame/sys/netinet6/natpt_*.[ch]:
	* kame/kame/natptconfig/*.[chly58]:
	- About natptcofig command
	  - Add "-q" option to suppress error message.
	  - Change it to return non ZERO value when detects syntax error.
	- NAT-PT rule has rule number.
	  You can omit rule number when setting NAT-PT.  In this case,
	  behaviour of natptconfig command is same as previous.
	  Rules can be deleted individually; Rule number can be
	  renumbered;
	- see natptconfig(8) and natpt.conf(5) for more detail.

2002-02-14  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_input): cleanup; removed a
	duplicated check for mapped source or destination addresses.

2002-02-14  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/mld6.c (mld6_start_listening): added an
	assertion in the case of this function was called before
	mld6_init().

2002-02-14  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_init2): stopped calling
	in6_ifattach(lo0).  We in fact do not need to call in6_ifattach()
	at this stage.  Additionally, in6_ifattach() has a bad effect of
	sending packets even though some parts of the kernel are not ready
	for sending.

2002-02-09  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/{netinet6, netkey}/: changed the definition of
	in6_multi{} to contain a full sockaddr_in6 of the multicast
	address.  Related functions were also modified accordingly.

	* kame/kame/ifmcstat/ifmcstat.c (in6_multientry):
	* {netbsd, openbsd}/usr.bin/netstat/if.c (intpr):
	Modified according to the change above.  These tools should
	be rebuilt as well as the kernel.

Mon Feb  8 JST 2002 sakane@kame.net
	* freebsd4: sync with 4.5-RELEASE

2002-02-04  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/sys/netinet6/in6_pcb.c (in6_pcbbind): correctly separated
	IPv4-mapped address case in in6_pcbbind().  Reported from bsdi.

2002-02-04  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/ping6: supported a new option '-g gateway' to allow a
	specific next hop.

2002-02-03  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/sbin/sysctl/sysctl.c (sysctl_key): supported net.key.*
	sysctls.

2002-02-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet6/udp6_usrreq.c (udp6_ctlinput):
	* openbsd/sys/netinet/udp_usrreq.c (udp6_ctlinput):
	* bsdi4/sys/netinet/udp_usrreq.c (udp6_ctlinput):
	corrected arguments to ip6_pcbnotify().

2002-02-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/tcp_subr.c (tcp_respond): correctly reset
	returned IPv6 header.  This is essential when the original packet
	contains an IPv6 extension header.

2002-02-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/usr.sbin/netstat/inet.c (ipsec6_stats): supported printing
	statistics for IPsec over IPv6.

2002-02-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* many kernel files: totally revised IPv6 scoped address
	architecture in the kernel.
	- sticked to use sockaddr_in6, not in6_addr, as much as possible
	- did not refer to ip6_src/ip6_dst (which may have ambiguity on
	  scope zones), but used full sockaddr_in6 structures attached to
	  the packet
	- replaced special cases for link-local addresses with code that
	  used generic functions such as in6_addr2zoneid()
        - additional cleanups mainly for scoped address handling

	The change is so big and we'll need some more time to stabilize
	the code.  It is not recommended to use the latest code for
	purposes that need stable behavior.

<200201>
2002-01-29 Shin'ichi Fujisawa	<fujisawa@kame.net>
	* kame/sys/netinet6/natpt_{defs,rule,soctl,usrreq}.[ch]:
	* kame/kame/natptconfig/misc.c:
	- Change NATPT related ioctl macro name which begin with
	  "SIOC" to name which begin with "NATPT".  "SIOC" as ioctl
	  macro name prefix is too general.

Mon Jan 28 17:19:19 JST 2002 keiichi@iij.ad.jp
	* kame/sys/netnet6/{mip6.c,mip6_binding.c,mip6.h}
	- fix a bug in the processing routine of the authentication data
	  sub-option.
	- change the default security policy for protecting bu/ba.
	  if compiled for ID-15, IPsec = 0 and authdata = 1.
	  if compiled for ID-13, IPsec = 1.

Mon Jan 28 14:09:21 JST 2002  itojun@iijlab.net
	* bsdi4: upgrade base version to BSD/OS 4.3.

2002-01-26  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_ctloutput): handled
	getsockopt(IPV6_RTHDR) correctly.
	In response to: KAME PR 403 from ylg@logique.jussieu.fr

Sat Jan 26 11:50:54 JST 2002 sakane@kame.net
	* kame/kame/racoon:
	the port number in the phase1 identifier is set 500
	when the identifier type is the ip address
	although it is described ambiguity in RFC2407 4.6.2.

2002-01-23  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_output): checked the
	IPV6_MINMTU flag in ip6_output as well as the IP6PO_MINMTU flag in
	the outgoing packet options.  The former can still be set by
	icmp6_reflect or gif_output.

Mon Jan 21 21:07:25 JST 2002 keiichi@iij.ad.jp
	* kame/sys/netinet6/mip6*,kame/kame/mip6control/
	add swithces to enable/disable
	- the check code of bu/ba if they are protected by the ipsec.
	- the check code of bu/ba if they are protected by the authdata.
	to enable/disable those switches, use mip6cotrol.
	
2002-01-21  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_pcb.h:
	* {bsdi4, freebsd, openbsd}/sys/netinet/in_pcb.h:
	- added foreign/local socket address structures to in[6]pcb{} in order
	  to have scope zone information of IPv6 addresses
	- changed [fl]addr and [fl]port as shortcut macro
	* kame/sys/netinet6/in6_pcb.c (in6_pcballoc): 
	* {bsdi4, freebsd, openbsd}/sys/netinet/in_pcb.c (in_pcballoc):
	- set sin6_family and sin6_len when allocating an AF_INET6 pcb

	Note: this change implicitly affected applications that referred
	to the in[6]pcb structure (e.g. netstat).  Be sure to update
	header files and recompile all KAME applications.

2002-01-21  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/wru: allowed the user to omit the hostname, in which
	case the command used ff02::1 disambiguating the link zone using
	the default interface.

2002-01-21  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/route6.c (ip6_rthdr0): made the source routing
	code more scope-aware:
	- it now considers all type of scopes (i.e. not only link-local
	  addresses).
	- it conforms to the forwarding rule described in the scoping arch
	  draft.

2002-01-21 SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* kame/kame/pim6sd/mldv2_proto.c:
	- fixed a bug that MLDv2 Report crashes pim6sd.

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	improved the support of IPv6 scoped addresses:
	* kame/sys/netinet6/ip6_var.h: added sockaddr_in6 structures to
	record source and destinaion addresses with scope information.
	* kame/sys/netinet6/ip6_input.c (ip6_input): recorded the
	addresses.
	* kame/sys/netinet6/ip6_forward.c(ip6_forward): used the recorded
	addresses to check scope breakage and to get a route.

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/udp6_output.c (udp6_output): corrected the
	length argument to in_cksum (bsdi4 only).

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/in_pcb.c (in_pcbladdr):
	* {freebsd4, netbsd, openbsd}/sys/netinet/ip_output.c (ip_output):
	* {netbsd, openbsd}/sys/netinet/in_pcb.c (in_selectsrc):
	- check the address family of the destination cached in a PCB.
	- clear the cached destination before getting another cached
	  route.  Otherwise, garbage in the padding space (which might be
	  filled in if it was used for IPv6) could annoy rtalloc.

	Note for OpenBSD: though Openbsd actually does not need these
	fixes since it does not support IPv4-mapped IPv6 addresses, the
	fixes are at least not harmful and will avoid possible bugs in the
	future if it will ever support mapped addresses.

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_src.c (in6_selectroute): checked the
	address family of a cached destination, in case of sharing the
	cache with IPv4.
	In response to: a bug report from Vineet Goel in the snap-users
	ML.

2002-01-20 SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* kame/kame/pim6{dd,sd}/mld6.c:
	fixed a bug that (*,G) entry diminishes due to a failure of
	MLD Query advertisement.

2002-01-18 Shin'ichi Fujisawa	<fujisawa@kame.net>
	* kame/sys/netinet6/natpt_*.[chly]:
	  kame/kame/natptconfig/natpt_{defs,dispatch}.[ch]:
	- Change a method of modification or reference of NAT-PT local
	  variable.  Natptconfig show subcommand does not read
	  /dev/kmem any more when refer to variable.

2002-01-12  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/icmp6.c (icmp6_rip6_input): if the received
	data is small enough but in an mbuf cluster, copy the data to a
	separate mbuf that does not use a cluster.
	This change will reduce the possiblity of packet loss in the
	socket layer.

2002-01-12  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/wru: was added as a separate command for ICMPv6 node
	information queries.  The first motivation of this command is to
	provide the ability to handle the queries and responses with
	platforms that do not support 'ping6 -w'.  Though this command is
	just a subset of 'ping6 -w' at this moment, it has some useful
	properties comparing to the existing command.  For example, wru
	only sends a single query even for a multicast destination.  In
	this case, it collects replies during a certain amount of period,
	prints the result, and then exits.

2002-01-11  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_src.c (in6_selectif): do not use a
	rejected or black hole route to pick the outgoing interface.
	Otherwise, we could disambiguate a scoped destination with the
	invalid route and would see some confusing results.

2002-01-11  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_input): do not accept packets
	to a destination that has a rejected or blackhole host route.

2002-01-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* (many kernel files): cleaned up the code to receive extension
	headers (and other optional information) on TCP sockets.  As a
	result, the kernel TCP stack does not pass the information to
	applications. All related functions were removed with this change,
	while the "imputopts" member in the PCB structure was remained
	just in case.

2002-01-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_clearpktopts): avoided NULL
	pointer reference.  The reference should have occurred in very
	rare cases, but it is recommended to upgrade the kernel the
	20011231 snap and later.

2002-01-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_savecontrol): do not compare
	the previous value of each option to decide if the option should
	be passed to application.  This part has been removed from the
	advanced API spec.

2002/01/07 21:26:21 JST kjc@csl.sony.co.jp
	add ECN (Explicit Congestion Notification) support (RFC3168).
	the ECN implementation consists of 3 independent components:
	  - marking mechanism in ALTQ
	  - tunnel-egress and fragment reassenbly rules in layer-3
	  - TCP mechanisms

	to enable ECN support in TCP, build a kernel with TCP_ECN
	and turn it on by sysctl -w net.inet.tcp.ecn=1
	netstat(1) shows the ECN related statistics.

	a simple example setup for ALTQ to mark packets on interface xl0:
		interface xl0 bandwidth 3M red ecn

2002-01-03  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/sys/netinet/ip_icmp.c (icmp_input): passed applications
	icmp6 error packets that contained ipv6 over ipv4 packets,
	even if the error packet did not have enough length to store the
	whole IPv6 packets.  traceroute -6 in fact needed this behavior.

2002-01-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/traceroute: added a new option "-6" to send IPv6 over
	IPv4 probe packets.  This option will specifically be useful to
	see if an intermediate router rejects the tunneled packets.

2002-01-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6.h: restricted the use of
	IPV6_RECVRTHDRDSTOPTS in the kernel.  This option was obsoleted in
	rfc2292bis-03.
