			CHANGELOG for KAME kit
$KAME: CHANGELOG,v 1.2062 2002/01/26 06:14:40 jinmei Exp $

<200201>
2002-01-26  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_ctloutput): handled
	getsockopt(IPV6_RTHDR) correctly.
	In response to: KAME PR 403 from ylg@logique.jussieu.fr

Sat Jan 26 11:50:54 JST 2002 sakane@kame.net
	* kame/kame/racoon:
	the port number in the phase1 identifier is set 500
	when the identifier type is the ip address
	although it is described ambiguity in RFC2407 4.6.2.

2002-01-23  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_output): checked the
	IPV6_MINMTU flag in ip6_output as well as the IP6PO_MINMTU flag in
	the outgoing packet options.  The former can still be set by
	icmp6_reflect or gif_output.

Mon Jan 21 21:07:25 JST 2002 keiichi@iij.ad.jp
	* kame/sys/netinet6/mip6*,kame/kame/mip6control/
	add swithces to enable/disable
	- the check code of bu/ba if they are protected by the ipsec.
	- the check code of bu/ba if they are protected by the authdata.
	to enable/disable those switches, use mip6cotrol.
	
2002-01-21  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_pcb.h:
	* {bsdi4, freebsd, openbsd}/sys/netinet/in_pcb.h:
	- added foreign/local socket address structures to in[6]pcb{} in order
	  to have scope zone information of IPv6 addresses
	- changed [fl]addr and [fl]port as shortcut macro
	* kame/sys/netinet6/in6_pcb.c (in6_pcballoc): 
	* {bsdi4, freebsd, openbsd}/sys/netinet/in_pcb.c (in_pcballoc):
	- set sin6_family and sin6_len when allocating an AF_INET6 pcb

	Note: this change implicitly affected applications that referred
	to the in[6]pcb structure (e.g. netstat).  Be sure to update
	header files and recompile all KAME applications.

2002-01-21  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/wru: allowed the user to omit the hostname, in which
	case the command used ff02::1 disambiguating the link zone using
	the default interface.

2002-01-21  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/route6.c (ip6_rthdr0): made the source routing
	code more scope-aware:
	- it now considers all type of scopes (i.e. not only link-local
	  addresses).
	- it conforms to the forwarding rule described in the scoping arch
	  draft.

2002-01-21 SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* kame/kame/pim6sd/mldv2_proto.c:
	- fixed a bug that MLDv2 Report crashes pim6sd.

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	improved the support of IPv6 scoped addresses:
	* kame/sys/netinet6/ip6_var.h: added sockaddr_in6 structures to
	record source and destinaion addresses with scope information.
	* kame/sys/netinet6/ip6_input.c (ip6_input): recorded the
	addresses.
	* kame/sys/netinet6/ip6_forward.c(ip6_forward): used the recorded
	addresses to check scope breakage and to get a route.

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/udp6_output.c (udp6_output): corrected the
	length argument to in_cksum (bsdi4 only).

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* freebsd4/sys/netinet/in_pcb.c (in_pcbladdr):
	* {freebsd4, netbsd, openbsd}/sys/netinet/ip_output.c (ip_output):
	* {netbsd, openbsd}/sys/netinet/in_pcb.c (in_selectsrc):
	- check the address family of the destination cached in a PCB.
	- clear the cached destination before getting another cached
	  route.  Otherwise, garbage in the padding space (which might be
	  filled in if it was used for IPv6) could annoy rtalloc.

	Note for OpenBSD: though Openbsd actually does not need these
	fixes since it does not support IPv4-mapped IPv6 addresses, the
	fixes are at least not harmful and will avoid possible bugs in the
	future if it will ever support mapped addresses.

2002-01-20  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_src.c (in6_selectroute): checked the
	address family of a cached destination, in case of sharing the
	cache with IPv4.
	In response to: a bug report from Vineet Goel in the snap-users
	ML.

2002-01-20 SUZUKI, Shinsuke <suz@sdl.hitachi.co.jp>
	* kame/kame/pim6{dd,sd}/mld6.c:
	fixed a bug that (*,G) entry diminishes due to a failure of
	MLD Query advertisement.

2002-01-18 Shin'ichi Fujisawa	<fujisawa@kame.net>
	* kame/sys/netinet6/natpt_*.[chly]:
	  kame/kame/natptconfig/natpt_{defs,dispatch}.[ch]:
	- Change a method of modification or reference of NAT-PT local
	  variable.  Natptconfig show subcommand does not read
	  /dev/kmem any more when refer to variable.

2002-01-12  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/icmp6.c (icmp6_rip6_input): if the received
	data is small enough but in an mbuf cluster, copy the data to a
	separate mbuf that does not use a cluster.
	This change will reduce the possiblity of packet loss in the
	socket layer.

2002-01-12  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/wru: was added as a separate command for ICMPv6 node
	information queries.  The first motivation of this command is to
	provide the ability to handle the queries and responses with
	platforms that do not support 'ping6 -w'.  Though this command is
	just a subset of 'ping6 -w' at this moment, it has some useful
	properties comparing to the existing command.  For example, wru
	only sends a single query even for a multicast destination.  In
	this case, it collects replies during a certain amount of period,
	prints the result, and then exits.

2002-01-11  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6_src.c (in6_selectif): do not use a
	rejected or black hole route to pick the outgoing interface.
	Otherwise, we could disambiguate a scoped destination with the
	invalid route and would see some confusing results.

2002-01-11  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_input): do not accept packets
	to a destination that has a rejected or blackhole host route.

2002-01-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* (many kernel files): cleaned up the code to receive extension
	headers (and other optional information) on TCP sockets.  As a
	result, the kernel TCP stack does not pass the information to
	applications. All related functions were removed with this change,
	while the "imputopts" member in the PCB structure was remained
	just in case.

2002-01-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_output.c (ip6_clearpktopts): avoided NULL
	pointer reference.  The reference should have occurred in very
	rare cases, but it is recommended to upgrade the kernel the
	20011231 snap and later.

2002-01-10  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/ip6_input.c (ip6_savecontrol): do not compare
	the previous value of each option to decide if the option should
	be passed to application.  This part has been removed from the
	advanced API spec.

2002/01/07 21:26:21 JST kjc@csl.sony.co.jp
	add ECN (Explicit Congestion Notification) support (RFC3168).
	the ECN implementation consists of 3 independent components:
	  - marking mechanism in ALTQ
	  - tunnel-egress and fragment reassenbly rules in layer-3
	  - TCP mechanisms

	to enable ECN support in TCP, build a kernel with TCP_ECN
	and turn it on by sysctl -w net.inet.tcp.ecn=1
	netstat(1) shows the ECN related statistics.

	a simple example setup for ALTQ to mark packets on interface xl0:
		interface xl0 bandwidth 3M red ecn

2002-01-03  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* bsdi4/sys/netinet/ip_icmp.c (icmp_input): passed applications
	icmp6 error packets that contained ipv6 over ipv4 packets,
	even if the error packet did not have enough length to store the
	whole IPv6 packets.  traceroute -6 in fact needed this behavior.

2002-01-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/kame/traceroute: added a new option "-6" to send IPv6 over
	IPv4 probe packets.  This option will specifically be useful to
	see if an intermediate router rejects the tunneled packets.

2002-01-02  JINMEI, Tatuya  <jinmei@isl.rdc.toshiba.co.jp>
	* kame/sys/netinet6/in6.h: restricted the use of
	IPV6_RECVRTHDRDSTOPTS in the kernel.  This option was obsoleted in
	rfc2292bis-03.
