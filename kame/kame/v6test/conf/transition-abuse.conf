#	$KAME: transition-abuse.conf,v 1.8 2001/06/23 15:15:13 itojun Exp $

# for more details/discussions, see
# http://playground.iijlab.net/i-d/draft-itojun-ipv6-transition-abuse-01.txt

# abuse of IPv4 mapped address.  under the following conditions:
# - the victim kernel stack does not check against IPv4 mapped address on
#   IPv6 native packet
# - the victim node runs udp echo service (inetd) on AF_INET6 socket
# the victim node can generate IPv4 broadcast responses mistakenly,
# leading to DoS.
#
# the example also tries bypass access controls and attack inside the firewall
# from outside (works nicer when 9.0.0.1 is an IPv4 firewall).
#
# you can attack any udp services by the same way.  udp echo service works the
# best for bad guys (or the worst for victims) since udp packet format is
# common to IPv4 and IPv6, and echo service is common for IPv4 and IPv6.
# therefore, the broadcast response will call for more responses (assumption:
# inetd does not check udp source port).
#	attacker -> victim: from ::ffff:10.255.255.255 to ::ffff:9.0.0.1
#	victim -> broadcast: from 9.0.0.1 to 10.255.255.255
#	more response: from many guys to 9.0.0.1
#
# RFC2553 does NOT comment on this case.  also, if the victim node supports
# SIIT (RFC2765) environment, the kernel stack is unable to filter out
# the packet.
#
# to protect your implmentation from the attack, there are multiple ways.
# the author recommends to implement the first two bullets at least:
# - do not support IPv4 mapped address on AF_INET6 API (not compatible with
#   RFC2553 section 4.2).
# - drop any IPv6 native packet with IPv4 mapped address (incompatible with
#   RFC2765).
# - on EVERY userland application check the IPv6 source address, if it
#   embeds bad IPv4 address (impossible in reality, as it's hard to know what
#   is "bad" address, and there are millions of coders in different places)
#
# of course, KAME is not affected.

v4mapped1:\
	:ip6-v4mapped1:udp1:
ip6-v4mapped1:\
        :ip6_flow#0:ip6_plen=auto:ip6_nxt=auto:ip6_hlim#255:\
        :ip6_src="::ffff:10.255.255.255":\
	:ip6_dst="::ffff:9.0.0.1":
udp1:\
	:udp_sport#7:udp_dport#7:

# one more abuse of IPv4 mapped address.
# bad guy pretends that the traffic is from the machine itself.
# if the victim node re-selects source address on the first udp echo response,
# we will see infinite IPv4 echo traffic on loopback interface
#
# note: most of recent BSD inetd rejects udp echo with source port = 7,
# so they are safe.  however, it is still true that we can bypass access
# control like this.

v4mapped2:\
	:ip6-v4mapped2:udp1:
ip6-v4mapped2:\
        :ip6_flow#0:ip6_plen=auto:ip6_nxt=auto:ip6_hlim#255:\
        :ip6_src="::ffff:127.0.0.1:\
	:ip6_dst="::ffff:9.0.0.1:

# abuse of IPv4 compatible address (auto tunnel).  under the following
# conditions:
# - the victim kernel stack supports auto tunnel
# the victim node will generate IPv4 broadcast responses, leading to DoS.
#
# the example also tries bypass access controls and attack inside the firewall
# from outside (works nicer when 9.0.0.1 is an IPv4 firewall).
#
# with other IPv6 source address, bad guys can attack other IPv4 victim nodes
# anonymously.  however, IPv4 packet will always be tunnelled IPv6 packet
# (ip.ip_p == 41), therefore there will be no further traffic amplicfication.
#
# RFC2883 has a comment for embedded broadcast/multicast case.
#
# KAME is not affected, since it does not support auto tunnels and it drops
# packets with IPv4 compatible address.

v4compat:\
	:ip6-v4compat:icmp6echo:
ip6-v4compat:\
        :ip6_flow#0:ip6_plen=auto:ip6_nxt=auto:ip6_hlim#255:\
        :ip6_src="::10.255.255.255":\
	:ip6_dst="::9.0.0.1:
icmp6echo:\
        :icmp6_type=echo:icmp6_code#0:icmp6_cksum=auto:icmp6_id#0:\
	:icmp6_seq#0:

# abuse of 6to4.  under the following conditions:
# - the victim node is configured as an 6to4 relay
# the victim node will generate IPv4 broadcast responses, leading to DoS.
#
# with other IPv6 source address, bad guys can attack other IPv4 victim nodes
# anonymously.  however, IPv4 packet will always be tunnelled IPv6 packet
# (ip.ip_p == 41), therefore there will be no further traffic amplicfication.
#
# 6to4 RFC has a comment for embedded broadcast/multicast case.
#
# KAME is not affected, as long as you don't configure your machine as 6to4
# relay.  if you configure KAME as 6to4 relay, you are vulnerable to some
# of the attack scenarios.

stf:\
	:ip6-stf:icmp6echo:
ip6-stf:\
        :ip6_flow#0:ip6_plen=auto:ip6_nxt=auto:ip6_hlim#255:\
        :ip6_src="2002:0aff:ffff::1":\
	:ip6_dst="2001:0900:0001::1":

# homework: try using these addresses in extension headers (routing header,
# home address option, whatever) and come up with more complex attack scnearios.
