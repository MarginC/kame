.\"	$KAME: bindtest.1,v 1.12 2001/06/25 17:51:25 itojun Exp $
.\"
.\" Copyright (C) 1999 WIDE Project.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the project nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd June 25, 2001
.Dt BINDTEST 1
.Os KAME
.\"
.Sh NAME
.Nm bindtest
.Nd test bind(2) behavior on IPv6 implementation
.\"
.Sh SYNOPSIS
.Nm
.Op Fl 126APlstv
.Op Fl o Ar IPv4address
.Fl p Ar port
.\"
.Sh DESCRIPTION
.Nm
tests interaction between IPv4/IPv6 socket interface, implemented into
the kernel it has underneath.
.Pp
RFC2553 defines socket API for IPv6, and relationship between
IPv6 wildcard
.Xr bind 2
socket
.Pq Li ::.port
and IPv4 wildcard
.Xr bind 2
socket
.Pq Li 0.0.0.0.port .
However, the document does not define ordering constraints between them,
relationship with specific
.Xr bind 2 ,
nor relationship with speficfic
.Xr bind 2
using IPv4 mapped IPv6 address
.Pq Li ::ffff:127.0.0.1 .
.Pp
.Nm
tries to reveal the behavior implemented in the kernel,
and shows some report to standard output.
As RFC2553 does not define the expected behavior,
we have no idea what the result should be.
.Pp
By default
.Nm
will use
.Dv SOCK_DGRAM
socket for testing.
With
.Fl t ,
.Nm
will use
.Dv SOCK_STREAM
socket instead.
TCP/UDP port number must be specified with
.Fl p Ar port .
The
.Ar port
needs to be vacant.
.Pp
.Fl A
sets 
.Dv SO_REUSEADDR
socket option for all the sockets.
.Fl P
sets
.Dv SO_REUSEPORT
socket option for all the sockets.
.Fl 6
uses
.Dv IPV6_V6ONLY
socket option on
.Dv AF_INET6
sockets
.Pq note that not many stacks implement this yet .
.Pp
With
.Fl 1 ,
.Fl 2 ,
or
.Fl o Ar IPv4address ,
.Nm
attempts to issue
.Xr connect 2
after two sockets become ready.
.Fl 1
and
.Fl 2
lets
.Nm
.Xr connect 2
to the address
.Nm
have used for
.Xr bind 2 .
With
.Fl o ,
.Nm
connects to the address specified by the extra argument,
.Ar IPv4address .
The options are meaningful only when
.Fl t
is specified.
.Pp
With
.Fl s ,
.Nm
generates summarized output instead of verbose output.
Here is a sample output, and the legends for summarized output.
.Pp
.Ds
starting tests, socktype = SOCK_DGRAM
        wild4   wild6   loop4   loop6   wildm   loopm   onem    one4
wild4:  x       o[---]  x       o[-2-]  ?2(49)  ?2(49)  ?2(49)  ?2(49)
wild6:  o[---]  x       o[-2-]  x       ?2(49)  ?2(49)  ?2(49)  ?2(49)
loop4:  x       o[1--]  x       o[12-]  ?2(49)  ?2(49)  ?2(49)  ?2(49)
loop6:  o[1--]  x       o[12-]  x       ?2(49)  ?2(49)  ?2(49)  ?2(49)
wildm:  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)
loopm:  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)
onem:   ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)
one4:   ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)  ?1(49)
.De
.Pp
.Nm
will make a two set of
.Xr socket 2
and
.Xr bind 2 .
The first set is presented on the lefthand side.
The second set is presented above the table.
.Bl -tag -width "xxxx"
.It o
The second
.Xr bind 2
attempt was successful after the first
.Xr bind 2 .
.Dq o
is followed by three letters enclosed in square brackets.
First letter shows the test result after
.Xr sendto 2
to the first socket address
.Pq listed on the topmost row .
Second letter shows the test result after
.Xr sendto 2
to the second socket address
.Pq listed on the leftmost column .
.Bl -tag -width "xxxx"
.It -
The address is wildcard
.Po
.Li ::
or
.Li 0.0.0.0
.Pc
and no attempts were made to test send/recv behavior.
.It 1
The first socket received the packet.
.It 2
The second socket received the packet.
.It b
Both sockets received the packet.
.El
.It x
.Xr bind 2
failed for the second set, with
.Dv EADDRINUSE .
.It !1
.Xr socket 2
failed for the first set.
Normally you will not see this, unless you run
.Nm
on IPv4-only/IPv6-only kernel.
Will be followed by
.Xr errno 2
in paren.
.It !2
.Xr socket 2
failed for the second set.
Normally you will not see this, unless you run
.Nm
on IPv4-only/IPv6-only kernel.
Will be followed by
.Xr errno 2
in paren.
.It ?1
.Xr bind 2
failed for the first set.
Will be followed by
.Xr errno 2
in paren.
.It ?2
.Xr bind 2
failed for the second set, with some error other than
.Dv EADDRINUSE .
Will be followed by
.Xr errno 2
in paren.
.El
.Pp
With
.Fl v
.Nm
prints its version and exits without testing anything.
.\"
.Sh RETURN VALUES
.Nm
exits with 0 on success, and non-zero on errors.
.\"
.Sh SEE ALSO
.Rs
.%A R. Gilligan
.%A S. Thomson
.%A J. Bound
.%A W. Stevens
.%T Basic Socket Interface Extensions for IPv6
.%D March 1999
.%N RFC2553
.Re
.Pp
.Xr bind 2 ,
.Xr tcpdump 8
.\"
.Sh HISTORY
The
.Nm
command first appeared in WIDE/KAME IPv6 protocol stack kit.
