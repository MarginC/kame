dnl Process this file with autoconf to produce a configure script.
AC_INIT(resolv/base64.c)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S

AC_PREFIX_DEFAULT(/usr/local)

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl default defs
AC_DEFINE(DNS)
AC_DEFINE(USE_GETIPNODEBY)

AC_ARG_ENABLE(inet6,
	[  --enable-inet6          enable IPv6 support (-DINET6)],
	[case "${enableval}" in
	yes)	AC_DEFINE(INET6) ;;
	no)	;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-inet6 option) ;;
	esac], [])

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(gethostname gettimeofday select socket strdup strerror)

dnl
dnl Check for sa_len
AC_CHECK_SA_LEN(ac_cv_sockaddr_has_sa_len)
if test "$ac_cv_sockaddr_has_sa_len" = no; then
	missing_includes=yes
fi

dnl
dnl check __P macro
AC_CHECK_PORTABLE_PROTO(ac_cv_portable_proto)
if test "$ac_cv_portable_proto" = no; then
	missing_includes=yes
fi

dnl
dnl check sizeof basic types
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)

dnl
dnl Checks for u_intXX_t
AC_CHECK_BITTYPES(ac_cv_bittypes)
if test "$ac_cv_bittypes" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for addrinfo structure
AC_STRUCT_ADDRINFO(ac_cv_addrinfo)
if test "$ac_cv_addrinfo" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for NI_MAXSERV
AC_NI_MAXSERV(ac_cv_maxserv)
if test "$ac_cv_maxserv" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for NI_NAMEREQD
AC_NI_NAMEREQD(ac_cv_namereqd)
if test "$ac_cv_namereqd" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for sockaddr_storage structure
AC_STRUCT_SA_STORAGE(ac_cv_sa_storage)
if test "$ac_cv_sa_storage" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for IN[6]ADDRSZ
AC_CHECK_ADDRSZ(ac_cv_addrsz)
if test "$ac_cv_addrsz" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for RES_USE_INET6
AC_CHECK_RES_USE_INET6(ac_cv_res_inet6)
if test "$ac_cv_res_inet6" = no; then
	missing_includes=yes
fi

dnl
dnl Checks for AAAA
AC_CHECK_AAAA(ac_cv_aaaa)
if test "$ac_cv_aaaa" = no; then
	AC_DEFINE(T_AAAA, 28)
fi

dnl
dnl Checks for res_state_ext structure
AC_STRUCT_RES_STATE_EXT(ac_cv_res_state_ext)
if test "$ac_cv_res_state_ext" = no; then
	missing_includes=yes
fi

dnl
dnl Checks if res_state structure has nsort member.
AC_STRUCT_RES_STATE(ac_cv_res_state)

dnl
dnl set additional include path if necessary
if test "$missing_includes" = "yes"; then
	CPPFLAGS="$CPPFLAGS -I./missing"
fi

AC_VAR_H_ERRNO

AC_ARG_ENABLE(pedant,
	[  --enable-pedant         pedantic compilation options],
	[case "${enableval}" in
	yes)	CFLAGS="$CFLAGS -Wall -Werror" ;;
	no)	;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-pedant option) ;;
	esac], [])

AC_OUTPUT(Makefile)
