--- sshd.c.orig	Sun May 16 00:47:51 1999
+++ sshd.c	Sun May 16 00:51:32 1999
@@ -1849,7 +1849,7 @@
     endspent();
   }
 #endif /* HAVE_ETC_SHADOW */
-#ifdef __FreeBSD__
+#if 0
   {
     time_t currtime;
     
@@ -1899,6 +1899,59 @@
       }
   }
 #endif  /* !FreeBSD */
+/* Net2,BSD4.4,BSD/OS,NetBSD,FreeBSD and OpenBSD all define BSD4_4
+   man passwd(5) says that format has changed since BSD4.3
+ */
+#ifdef BSD4_4 
+  if(pwd->pw_change || pwd->pw_expire) {
+    time_t currtime;
+    currtime = time(NULL);
+    /*
+     * Check for an expired password
+     */
+
+    if (pwd->pw_change)
+      {
+	/* PASSWD_CHGNOW seems to be -1 for now but... */
+	if (
+#if defined(PASSWD_CHGNOW) && PASSWD_CHGNOW > 0
+	    pwd->pw_change == PASSWD_CHGNOW ||
+#endif
+	    pwd->pw_change <= currtime)
+	  {
+	    packet_send_debug("Password has expired");
+	    if(options.forced_passwd_change)
+	      {
+		debug("Account %.99s's password is too old - change forced.",
+		      user);
+		forced_command = xmalloc(sizeof(PASSWD_PATH) +
+					 strlen(user) + 1);
+		sprintf(forced_command, "%s %s", PASSWD_PATH, user);
+	      }
+	    else
+	      {
+		return 0;
+	      }
+	  }
+#ifdef PASSWD_CHGNOW
+	if(pwd->pw_change != PASSWD_CHGNOW)
+	  days_before_password_expires = (pwd->pw_change - currtime) / 86400;
+#endif
+      }
+    /*
+     * Check for expired account
+     */
+    if (pwd->pw_expire)
+      {
+	if (pwd->pw_expire <= currtime)
+	  {
+	    packet_send_debug("Account has expired");
+	    return 0;
+	  }
+	days_before_account_expires = (pwd->pw_expire - currtime) / 86400;
+      }
+  }
+#endif  /* !BSD4_4 */
 
 #ifdef HAVE_HPUX_TCB_AUTH
   {
@@ -2287,11 +2340,11 @@
   pwcopy.pw_passwd = xstrdup(pw->pw_passwd);
   pwcopy.pw_uid = pw->pw_uid;
   pwcopy.pw_gid = pw->pw_gid;
-#if (defined (__bsdi__) && _BSDI_VERSION >= 199510) || (defined (__FreeBSD__) && defined(HAVE_LOGIN_CAP_H))
+#ifdef BSD4_4
   pwcopy.pw_class = xstrdup(pw->pw_class);
   pwcopy.pw_change = pw->pw_change;
   pwcopy.pw_expire = pw->pw_expire;
-#endif /*  __bsdi__  && _BSDI_VERSION >= 199510 */
+#endif /*  BSD4_4 */
   pwcopy.pw_dir = xstrdup(pw->pw_dir);
   pwcopy.pw_shell = xstrdup(pw->pw_shell);
   pw = &pwcopy;
@@ -3398,9 +3451,6 @@
 #if defined (__FreeBSD__) && defined(HAVE_LOGIN_CAP_H)
   login_cap_t *lc;
 #endif
-#if defined (__bsdi__) && _BSDI_VERSION >= 199510 
-  struct timeval tp;
-#endif /*  __bsdi__ && _BSDI_VERSION >= 199510 */
 
   /* We no longer need the child running on user's privileges. */
   userfile_uninit();
@@ -3581,30 +3631,6 @@
                 fputs(line, stdout);
               fclose(f);
             }
-#if defined (__bsdi__) && _BSDI_VERSION >= 199510
-          if (pw->pw_change || pw->pw_expire)
-            (void)gettimeofday(&tp, (struct timezone *)NULL);
-          if (pw->pw_change)
-            {
-              if (tp.tv_sec >= pw->pw_change)
-                {
-                  fprintf(stderr,"Sorry -- your password has expired.\n");
-                  exit(254);
-                }
-              days_before_password_expires = (pw->pw_change - tp.tv_sec) /
-                86400;
-            }
-          if (pw->pw_expire)
-            {
-              if (tp.tv_sec >= pw->pw_expire)
-                {
-                  fprintf(stderr,"Sorry -- your account has expired.\n");
-                  exit(254);
-                }
-              days_before_account_expires = (pw->pw_expire - tp.tv_sec) /
-                86400;
-            }
-#endif /* __bsdi__ & _BSDI_VERSION >= 199510   */
         }
 
 #if defined (__FreeBSD__) && defined HAVE_LOGIN_CAP_H
